{"version":3,"sources":["components/GameCard/GameCard.js","components/Wrapper/Wrapper.js","components/Navbar/Navbar.js","components/Title/Title.js","components/Body/Body.js","App.js","index.js"],"names":["GameCard","props","react_default","a","createElement","className","onClick","handleOnChange","alt","name","src","image","Wrapper","children","Navbar","score","highscore","Title","Body","gameInfo","App","state","clickedImages","images","_this","handleIncrement","handleOnClick","id","shuffleArray","setState","array","i","length","j","Math","floor","random","_ref","includes","push","console","log","_this2","this","components_Wrapper_Wrapper","components_Navbar_Navbar","components_Title_Title","components_Body_Body","map","components_GameCard_GameCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"0zDAWeA,SARE,SAAAC,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,eAAeN,KACxDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKI,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,YCDxBC,SAFC,SAAAX,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMY,YCE1CC,SAFA,SAAAb,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,UAA0CJ,EAAMc,MAAhD,kBAAsEd,EAAMe,aCErFC,SAFD,SAAAhB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMgB,SCErCC,SAFF,SAAAjB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQJ,EAAMkB,mBC4FnCC,oNApFbC,MAAQ,CACNN,MAAO,EACPC,UAAW,EACXM,cAAe,GACfL,MAAO,sBACPE,SAAU,wDACVI,YAIFhB,eAAiB,SAACN,GAChBuB,EAAKC,gBAAgBxB,GACrBuB,EAAKE,cAAczB,EAAM0B,IACzBH,EAAKI,aAAaJ,EAAKH,MAAME,WAG/BE,gBAAkB,SAACxB,GAEjBuB,EAAKK,SAAS,CAAEd,MAAOS,EAAKH,MAAMN,MAAQ,OAI5Ca,aAAe,SAACE,GACd,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADDM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,KAKTJ,cAAgB,SAAAC,GACVH,EAAKH,MAAMC,cAAcgB,SAASX,IACpCH,EAAKK,SAAS,CAAEd,MAAO,EAAGO,cAAe,KACzCE,EAAKK,SAAS,CAAEV,SAAU,iEACI,KAArBK,EAAKH,MAAMN,OACpBS,EAAKK,SAAS,CAAEd,MAAO,EAAGO,cAAe,KACzCE,EAAKK,SAAS,CAAEV,SAAU,4CAC1BK,EAAKK,SAAS,CAAEb,UAAW,OAIvBQ,EAAKH,MAAMN,MAAQ,EAAIS,EAAKH,MAAML,WACpCQ,EAAKK,SAAS,CACZb,UAAWQ,EAAKH,MAAMN,MAAQ,IAGlCS,EAAKK,SAAS,CAAEV,SAAU,0BAC1BK,EAAKH,MAAMC,cAAciB,KAAKZ,GAC9Ba,QAAQC,IAAI,iBAAmBjB,EAAKH,MAAMC,eAC1CE,EAAKK,SAAS,CAAEd,MAAOS,EAAKH,MAAMN,MAAQ,IACjB,KAArBS,EAAKH,MAAMN,OACbS,EAAKK,SAAS,CAAEV,SAAU,+CAE5BqB,QAAQC,IAAI,SAAWjB,EAAKH,MAAMN,iFAK7B,IAAA2B,EAAAC,KAIP,OAHAA,KAAKf,aAAae,KAAKtB,MAAME,QAC7BiB,QAAQC,IAAIlB,GAGVrB,EAAAC,EAAAC,cAACwC,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAD,CAAQxC,UAAU,QAAQU,MAAO4B,KAAKtB,MAAMN,MAAOC,UAAW2B,KAAKtB,MAAML,YACzEd,EAAAC,EAAAC,cAAC0C,EAAD,CAAOzC,UAAU,QAAQY,MAAO0B,KAAKtB,MAAMJ,QAC3Cf,EAAAC,EAAAC,cAAC2C,EAAD,CAAM1C,UAAU,OAAOc,SAAUwB,KAAKtB,MAAMF,WAC3CwB,KAAKtB,MAAME,OAAOyB,IAAI,SAAAzB,GAAM,OAC3BrB,EAAAC,EAAAC,cAAC6C,EAAD,CACE1C,eAAgBmC,EAAKnC,eACrBkB,gBAAiBiB,EAAKjB,gBACtBE,GAAIJ,EAAOI,GACXuB,IAAK3B,EAAOI,GACZlB,KAAMc,EAAOd,KACbE,MAAOY,EAAOZ,kBA9ERwC,oBCJlBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ce636ff8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./GameCard.css\";\n\nconst GameCard = props => (\n  <div className=\"card\" onClick={() => props.handleOnChange(props)}>\n    <div className=\"img-container\" >\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default GameCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = props => <nav className=\"navbar fixed-top\">Score: {props.score} | High Score: {props.highscore}</nav>;\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.Title}</h1>;\n\nexport default Title;\n","import React from \"react\";\nimport \"./Body.css\";\n\nconst Body = props => <h1 className=\"body\">{props.gameInfo}</h1>;\n\nexport default Body;\n","import React, { Component } from \"react\";\nimport GameCard from \"./components/GameCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Title from \"./components/Title\";\nimport Body from \"./components/Body\";\nimport images from \"./images.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting up the this.state.images\n  state = {\n    score: 0,\n    highscore: 0,\n    clickedImages: [],\n    Title: \"IN A NEW YORK CLICK\",\n    gameInfo: \"CLICK ON AN IMAGE!  DON'T CLICK THE SAME IMAGE TWICE!\",\n    images\n  };\n\n  //handleOnChange callback\n  handleOnChange = (props) => {\n    this.handleIncrement(props);\n    this.handleOnClick(props.id)\n    this.shuffleArray(this.state.images)\n  }\n  //handleIncrement callback\n  handleIncrement = (props) => {\n\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  // For Loop to shuffle the array\n  shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  // logic to reset the score, update the high score if image is clicked twice.\n  // logic to provide messages to the user if they click an image twice, if they have correctly clicked an image, or if they win\n  handleOnClick = id => {\n    if (this.state.clickedImages.includes(id)) {\n      this.setState({ score: 0, clickedImages: [] })\n      this.setState({ gameInfo: \"WHOOPS!  THAT WAS INCORRECT.  CLICK AN IMAGE TO PLAY AGAIN!\" })\n    } else if (this.state.score === 11) {\n      this.setState({ score: 0, clickedImages: [] })\n      this.setState({ gameInfo: \"YOU WIN!  CLICK AN IMAGE TO PLAY AGAIN!\" })\n      this.setState({ highscore: 12 })\n    }\n\n    else {\n      if (this.state.score + 1 > this.state.highscore) {\n        this.setState({\n          highscore: this.state.score + 1\n        })\n      }\n      this.setState({ gameInfo: \"CORRECT! CLICK AGAIN!\" })\n      this.state.clickedImages.push(id);\n      console.log(\"clicked images\" + this.state.clickedImages);\n      this.setState({ score: this.state.score + 1 });\n      if (this.state.score === 11) {\n        this.setState({ gameInfo: \"YOU WIN! CLICK ON ANY IMAGE TO PLAY AGAIN!\" })\n      }\n      console.log(\"SCORE \" + this.state.score);\n    }\n  };\n\n  // Render a GameCard component for each image object\n  render() {\n    this.shuffleArray(this.state.images);\n    console.log(images);\n\n    return (\n      <Wrapper>\n        <Navbar className=\"score\" score={this.state.score} highscore={this.state.highscore} />\n        <Title className=\"title\" Title={this.state.Title} />\n        <Body className=\"body\" gameInfo={this.state.gameInfo} />\n        {this.state.images.map(images => (\n          <GameCard\n            handleOnChange={this.handleOnChange}\n            handleIncrement={this.handleIncrement}\n            id={images.id}\n            key={images.id}\n            name={images.name}\n            image={images.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}